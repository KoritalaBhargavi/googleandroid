DAY 2 

1.TEXT CONTAINER:-
syntax:-
Text(
//body of the text
text="your data"
)

2.IMAGE CONTAINER:-
syntax:
Image(
 painter = painterResource(id = _image_id_)
)

Image ID:
R.Drawable.(image name)

Task :
1.@composable
fun hi(){
Text(
text="Hello Android!"
)
}

2.@composable
fun Greeting(name:String){
	Text(
		text="Hello $name!"
	)
}
//function calling
Greeting("Bhargavi")


WHERE SHOULD THE FUNCTION BE CALLED?
ANS:SetContent

SYNTAX :
//To Launch the App
OnCreate() {
	//To display the data/info 
	SetContent(){
		//function where display data is declared 
		Greeting("Bhargavi")
	}
}

@ preview 
@Composable
fun GreetingPreview() {
	//body of the preview function
	Greeting("pavani")
}

FINAL CODE STRUCTURE:-
OnCreate() {
	//To display the data/info 
	SetContent(){
		//function where display data is declared 
		Greeting("Bhargavi")
	}
}
@composable
fun Greeting(name:String){
	Text(
		text="Hello $name!"
	)
}
//function calling
Greeting("Bhargavi")
@ preview 
@Composable
fun GreetingPreview() {
	//body of the preview function
	Greeting("Bhargavi")
}


TASK:

package com.example.birthday
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.birthday.ui.theme.BirthdayTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            BirthdayTheme {
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    GreetingImage(message = "Happy Birthday Kavya!", from = "From CIET")
                }
            }
        }
    }
}
@Composable
fun GreetingText(message: String,from: String, modifier: Modifier=Modifier) {
    Column(verticalArrangement=Arrangement.Center,modifier = Modifier.padding(6.dp)){
        Text(
            text = message,
            fontSize =85.sp,
            lineHeight = 116.sp,
            textAlign = TextAlign.Center
        )
        Text(
            text = from,
            fontSize = 36.sp,
            modifier = Modifier.padding(16.dp).align(alignment = Alignment.End)
        )

    }
}
@Composable
fun GreetingImage(message: String, from: String,modifier: Modifier = Modifier) {
    val image = painterResource(id = R.drawable.androidparty)
    Box {
        Image(
            painter = image,
            contentDescription = null
        )
        GreetingText(
            message = message,
            from = from,
            modifier = Modifier.fillMaxSize().padding(8.dp)
        )

    }
}

@Preview(showBackground = true)
@Composable
fun BirthdayCardPreview() {
    BirthdayTheme {
        GreetingImage(message = "Happy Birthday Kavya!", from = "From CIET")
    }
}
HOME TASK:
Usage:

dp: Used for defining layout dimensions such as width, height, margins, padding, etc.sp: Primarily used for defining text sizes.

Scaling Factor:

dp: Scales based on the screen density (dpi), ensuring consistent sizing across different devices.sp: Scales based on both screen density and the user’s font size preference.

Effect of Font Settings:

dp: Not affected by the user’s font size settings.sp: Affected by the user’s font size settings (important for accessibility).

When to Use:

dp: For any UI element dimensions like view sizes, margins, and padding that should stay consistent across devices.sp: For text sizes to ensure readability and adapt to user preferences for larger or smaller fonts.

Example Use Case:

dp: Defining view sizes, layout dimensions, margins, and padding.sp: Defining font sizes in UI components like TextView, buttons, etc.


